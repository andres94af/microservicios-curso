package com.usuario.service.services;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.usuario.service.entities.UserEntity;
import com.usuario.service.feignClients.CarFeignClient;
import com.usuario.service.feignClients.MotoFeignClient;
import com.usuario.service.models.Car;
import com.usuario.service.models.Moto;
import com.usuario.service.repositories.UserRepository;

@Service
public class UserService {

	@Autowired
	private UserRepository userRepository;

	public List<UserEntity> getAll(){
		return userRepository.findAll();
	}
	
	public UserEntity getUserById(Integer id) {
		return userRepository.findById(id).orElse(null);
	}
	
	public UserEntity save(UserEntity user) {
		return userRepository.save(user);
	}
	
	//--------------------------------------------------------- UTILIZANDO REST TEMPLATE
	
	@Autowired
	private RestTemplate restTemplate;
	
	public List<Car> getCarsByUserId(Integer userId){
		List<Car> cars = restTemplate.getForObject("http://localhost:8002/car/user/"+userId, List.class);
		return cars;
	}
	
	public List<Moto> getMotosByUserId(Integer userId){
		List<Moto> moto = restTemplate.getForObject("http://localhost:8003/moto/user/"+userId, List.class);
		return moto;
	}
	

	//---------------------------------------------------------- UTILIZANDO FEIGN CLIENT
	
	@Autowired
	private CarFeignClient carFeignClient;
	
	@Autowired
	private MotoFeignClient motoFeignClient;
	
	public Car saveCar(Integer userId, Car car) {
		car.setUserId(userId);
		return carFeignClient.save(car);
	}
	
	public Moto saveMoto(Integer userId, Moto moto) {
		moto.setUserId(userId);
		return motoFeignClient.save(moto);
	}
	
	public Map<String, Object> getUsersAndVehicles(Integer userId){
		Map<String, Object> result = new HashMap<>();
		UserEntity user = userRepository.findById(userId).orElse(null);
		if (user == null) {
			result.put("Mensaje", "El usuario no existe");
			return result;
		}
		result.put("Usuario", user);
		
		List<Car> cars = carFeignClient.getCarsByUserId(userId);
		if (cars.isEmpty()) {
			
		}
	}
}
